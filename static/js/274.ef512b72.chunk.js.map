{"version":3,"file":"static/js/274.ef512b72.chunk.js","mappings":"0SAOe,SAASA,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAcC,EAAAA,EAAAA,MACdC,GAAeD,EAAAA,EAAAA,MACfE,GAAkBF,EAAAA,EAAAA,MAElBG,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBC,EAAe,SAACC,GAClB,MAAwBA,EAAEC,cAAlBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MACd,MAAa,SAATlB,EACOC,EAAQiB,GAEN,UAATlB,EACOG,EAASe,GAEP,aAATlB,EACOK,EAAYa,QADvB,CAGH,EAUD,OACI,SAAC,KAAD,CAAKC,KAAM,IAAKC,GAAG,OAAOC,GAAG,OAAOC,GAAG,KAAKC,GAAG,KAA/C,UACI,UAAC,KAAD,CAAaC,GAAG,OAAOC,aAAa,MAAMC,SAV7B,SAACV,GAClBA,EAAEW,iBACFjB,GAASkB,EAAAA,EAAAA,IAAa,CAAE5B,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACrCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACf,EAIyEwB,MAAO,CAAEC,OAAQ,oBAAqBC,QAAS,YAAaC,aAAc,QAA5I,WACI,SAAC,KAAD,CAAWC,QAAS3B,EAApB,mBACA,SAAC,KAAD,CAAO4B,YAAU,EAACC,KAAK,OAAOnC,KAAK,OAAOoC,SAAUrB,EAAcsB,GAAI/B,KACtE,SAAC,KAAD,CAAW2B,QAASzB,EAApB,oBACA,SAAC,KAAD,CAAO0B,YAAU,EAACC,KAAK,QAAQnC,KAAK,QAAQoC,SAAUrB,EAAcsB,GAAI7B,KACxE,SAAC,KAAD,CAAWyB,QAASxB,EAApB,uBACA,SAAC,KAAD,CAAOyB,YAAU,EAACC,KAAK,WAAWnC,KAAK,WAAWoC,SAAUrB,EAAcsB,GAAI5B,KAC9E,SAAC,KAAD,CAAM6B,QAAQ,SAAd,UACI,SAAC,KAAD,CAAQ1B,UAAWA,EAAW2B,EAAG,IAAKC,YAAY,aAAaC,GAAG,IAAIN,KAAK,SAA3E,8BAKnB,C","sources":["pages/RegisterForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { nanoid } from 'nanoid'\nimport { registerUser } from 'redux/auth/auth-operations'\nimport { FormControl, Input, FormLabel, Button, Box, Flex } from '@chakra-ui/react'\nimport { getIsLoading } from 'redux/auth/auth-selectors'\n\nexport default function RegisterForm() {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const nameInputId = nanoid()\n    const emailInputId = nanoid()\n    const passwordInputId = nanoid()\n\n    const dispatch = useDispatch()\n    const isLoading = useSelector(getIsLoading)\n\n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget\n        if (name === 'name') {\n            return setName(value)\n        }\n        if (name === 'email') {\n            return setEmail(value)\n        }\n        if (name === 'password') {\n            return setPassword(value)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(registerUser({ name, email, password }))\n        setName('')\n        setEmail('')\n        setPassword('')\n    }\n\n    return (\n        <Box maxW={700} ml='auto' mr='auto' pt='10' pb='10'>\n            <FormControl as='form' autoComplete='off' onSubmit={handleSubmit} style={{ border: '1px solid #A0AEC0', padding: '10px 20px', borderRadius: '10px' }}>\n                <FormLabel htmlFor={nameInputId}>Name</FormLabel>\n                <Input isRequired type='text' name='name' onChange={handleChange} id={nameInputId}></Input>\n                <FormLabel htmlFor={emailInputId}>Email</FormLabel>\n                <Input isRequired type='email' name='email' onChange={handleChange} id={emailInputId}></Input>\n                <FormLabel htmlFor={passwordInputId}>Password</FormLabel>\n                <Input isRequired type='password' name='password' onChange={handleChange} id={passwordInputId}></Input>\n                <Flex justify='center'>\n                    <Button isLoading={isLoading} w={200} colorScheme='blackAlpha' mt='6' type='submit'> Register </Button>\n                </Flex>\n            </FormControl>\n        </Box>\n    )\n}\n\n"],"names":["RegisterForm","useState","name","setName","email","setEmail","password","setPassword","nameInputId","nanoid","emailInputId","passwordInputId","dispatch","useDispatch","isLoading","useSelector","getIsLoading","handleChange","e","currentTarget","value","maxW","ml","mr","pt","pb","as","autoComplete","onSubmit","preventDefault","registerUser","style","border","padding","borderRadius","htmlFor","isRequired","type","onChange","id","justify","w","colorScheme","mt"],"sourceRoot":""}