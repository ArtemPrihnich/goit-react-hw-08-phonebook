{"version":3,"file":"static/js/451.608c7251.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactsForm/ContactsForm.jsx","components/ErrorNotify/ErrorNotify.jsx","../node_modules/@chakra-ui/progress/dist/index.esm.js","components/ContactsList/ContactsList.jsx","redux/filter/filter-selectors.js","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getIsLoading = state => state.contacts.isLoading\n\nexport const getItems = state => state.contacts.items\n\nexport const getError = state => state.contacts.error\n\nexport const getFilteredContacts = ({ contacts, filter }) => {   \n  const contactss = contacts.items\n  const filterr = filter\n    if (!filterr) {\n      return contactss\n    }\n\n  const filteredContacts = contactss.filter(({ name, number }) => {\n      const result = name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()) || number.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n      return result\n    })\n\n    return filteredContacts\n}","import React, { useState } from 'react'\nimport { nanoid } from 'nanoid'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { FormLabel, FormControl, Input, Button } from '@chakra-ui/react';\n\nexport default function ContactsForm() {\n    const contacts = useSelector(getFilteredContacts)\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n\n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget\n        if (name === 'name') {\n            return setName(value)\n        }\n        if (name === 'number') {\n            return setNumber(value)\n        }\n    };\n\n    const contactNameInpuId = nanoid();\n    const contactNumberInputId = nanoid();\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        onAddContact({ name, number })\n    }\n\n    const onAddContact = (contact) => {\n        if (onDuplicatingName(contact)) {\n            // return Notify.failure(`This contact: (${contact.name}) is already in your contact book`);\n            return alert('Contact now da')\n        }\n\n        dispatch(addContact(contact))\n        setName('')\n        setNumber('')\n    }\n\n    const onDuplicatingName = ({ name }) => {\n        const result = contacts.find(contact => {\n            return contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n        })\n        return result\n    }\n\n    return (\n        <FormControl as='form' isRequired autoComplete='off' style={{ border: '1px solid #A0AEC0', padding: '10px 20px', borderRadius: '10px' }} onSubmit={handleSubmit}>\n            <FormLabel htmlFor={contactNameInpuId}>Name</FormLabel>\n            <Input type='text' name='name' value={name} id={contactNameInpuId} onChange={handleChange} borderColor='gray.400' placeholder='Ivan Ivanov' />\n            <FormLabel htmlFor={contactNumberInputId}>Number</FormLabel>\n            <Input type='number' name='number' value={number} id={contactNumberInputId} onChange={handleChange} borderColor='gray.400' placeholder='+38 (012) 345 67 89' />\n            <Button colorScheme='blackAlpha' ml='6' mt='4' type='submit'>Add Contact</Button>\n        </FormControl>\n    )\n}\n\n","import React from 'react'\nimport { useSelector } from \"react-redux\";\nimport { getError } from 'redux/contacts/contacts-selectors';\n\nexport default function ErrorNotify() {\n    const error = useSelector(getError)\n\n    return (\n        <>\n            <div style={{ display: 'block', width: '450px', margin: '0 auto', textAlign: 'center', paddingTop: '100px', fontSize: '28px' }}>\n                Oops, something went wrong :( {error}\n            </div>\n        </>\n    )\n}\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/circular-progress.tsx\nimport {\n  chakra as chakra3,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// src/progress.utils.tsx\nimport { keyframes } from \"@chakra-ui/system\";\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nvar spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nvar rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar progress = keyframes({\n  \"0%\": { left: \"-40%\" },\n  \"100%\": { left: \"100%\" }\n});\nvar stripe = keyframes({\n  from: { backgroundPosition: \"1rem 0\" },\n  to: { backgroundPosition: \"0 0\" }\n});\nfunction getProgressProps(options) {\n  const {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate,\n    role = \"progressbar\"\n  } = options;\n  const percent = valueToPercent(value, min, max);\n  const getAriaValueText = () => {\n    if (value == null)\n      return void 0;\n    return typeof getValueText === \"function\" ? getValueText(value, percent) : valueText;\n  };\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : void 0,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? void 0 : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role\n    },\n    percent,\n    value\n  };\n}\n\n// src/shape.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar Shape = (props) => {\n  const { size, isIndeterminate, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra.svg, {\n    viewBox: \"0 0 100 100\",\n    __css: {\n      width: size,\n      height: size,\n      animation: isIndeterminate ? `${rotate} 2s linear infinite` : void 0\n    },\n    ...rest\n  });\n};\nShape.displayName = \"Shape\";\n\n// src/circle.tsx\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nvar Circle = (props) => /* @__PURE__ */ React.createElement(chakra2.circle, {\n  cx: 50,\n  cy: 50,\n  r: 42,\n  fill: \"transparent\",\n  ...props\n});\nCircle.displayName = \"Circle\";\n\n// src/circular-progress.tsx\nvar CircularProgress = forwardRef((props, ref) => {\n  const {\n    size = \"48px\",\n    max = 100,\n    min = 0,\n    valueText,\n    getValueText,\n    value,\n    capIsRound,\n    children,\n    thickness = \"10px\",\n    color = \"#0078d4\",\n    trackColor = \"#edebe9\",\n    isIndeterminate,\n    ...rest\n  } = props;\n  const progress2 = getProgressProps({\n    min,\n    max,\n    value,\n    valueText,\n    getValueText,\n    isIndeterminate\n  });\n  const determinant = isIndeterminate ? void 0 : (progress2.percent ?? 0) * 2.64;\n  const strokeDasharray = determinant == null ? void 0 : `${determinant} ${264 - determinant}`;\n  const indicatorProps = isIndeterminate ? {\n    css: { animation: `${spin} 1.5s linear infinite` }\n  } : {\n    strokeDashoffset: 66,\n    strokeDasharray,\n    transitionProperty: \"stroke-dasharray, stroke\",\n    transitionDuration: \"0.6s\",\n    transitionTimingFunction: \"ease\"\n  };\n  const rootStyles = {\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    fontSize: size\n  };\n  return /* @__PURE__ */ React.createElement(chakra3.div, {\n    ref,\n    className: \"chakra-progress\",\n    ...progress2.bind,\n    ...rest,\n    __css: rootStyles\n  }, /* @__PURE__ */ React.createElement(Shape, {\n    size,\n    isIndeterminate\n  }, /* @__PURE__ */ React.createElement(Circle, {\n    stroke: trackColor,\n    strokeWidth: thickness,\n    className: \"chakra-progress__track\"\n  }), /* @__PURE__ */ React.createElement(Circle, {\n    stroke: color,\n    strokeWidth: thickness,\n    className: \"chakra-progress__indicator\",\n    strokeLinecap: capIsRound ? \"round\" : void 0,\n    opacity: progress2.value === 0 && !isIndeterminate ? 0 : void 0,\n    ...indicatorProps\n  })), children);\n});\nCircularProgress.displayName = \"CircularProgress\";\n\n// src/progress.tsx\nimport {\n  chakra as chakra4,\n  omitThemingProps,\n  useMultiStyleConfig,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ProgressStylesProvider, useProgressStyles] = createContext({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgressStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `\n});\nvar ProgressFilledTrack = forwardRef2((props, ref) => {\n  const { min, max, value, isIndeterminate, role, ...rest } = props;\n  const progress2 = getProgressProps({\n    value,\n    min,\n    max,\n    isIndeterminate,\n    role\n  });\n  const styles = useProgressStyles();\n  const trackStyles = {\n    height: \"100%\",\n    ...styles.filledTrack\n  };\n  return /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    style: { width: `${progress2.percent}%`, ...rest.style },\n    ...progress2.bind,\n    ...rest,\n    __css: trackStyles\n  });\n});\nvar Progress = forwardRef2((props, ref) => {\n  var _a;\n  const {\n    value,\n    min = 0,\n    max = 100,\n    hasStripe,\n    isAnimated,\n    children,\n    borderRadius: propBorderRadius,\n    isIndeterminate,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    title,\n    role,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Progress\", props);\n  const borderRadius = propBorderRadius ?? ((_a = styles.track) == null ? void 0 : _a.borderRadius);\n  const stripeAnimation = { animation: `${stripe} 1s linear infinite` };\n  const shouldAddStripe = !isIndeterminate && hasStripe;\n  const shouldAnimateStripe = shouldAddStripe && isAnimated;\n  const css = {\n    ...shouldAnimateStripe && stripeAnimation,\n    ...isIndeterminate && {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: `${progress} 1s ease infinite normal none running`\n    }\n  };\n  const trackStyles = {\n    overflow: \"hidden\",\n    position: \"relative\",\n    ...styles.track\n  };\n  return /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    borderRadius,\n    __css: trackStyles,\n    ...rest\n  }, /* @__PURE__ */ React.createElement(ProgressStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(ProgressFilledTrack, {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    min,\n    max,\n    value,\n    isIndeterminate,\n    css,\n    borderRadius,\n    title,\n    role\n  }), children));\n});\nProgress.displayName = \"Progress\";\n\n// src/progress-label.tsx\nimport { chakra as chakra5 } from \"@chakra-ui/system\";\nvar ProgressLabel = (props) => {\n  const styles = useProgressStyles();\n  const labelStyles = {\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\",\n    ...styles.label\n  };\n  return /* @__PURE__ */ React.createElement(chakra5.div, {\n    ...props,\n    __css: labelStyles\n  });\n};\nProgressLabel.displayName = \"ProgressLabel\";\n\n// src/circular-progress-label.tsx\nimport { chakra as chakra6 } from \"@chakra-ui/system\";\nvar CircularProgressLabel = chakra6(\"div\", {\n  baseStyle: {\n    fontSize: \"0.24em\",\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\"\n  }\n});\nCircularProgressLabel.displayName = \"CircularProgressLabel\";\nexport {\n  CircularProgress,\n  CircularProgressLabel,\n  Progress,\n  ProgressLabel,\n  useProgressStyles\n};\n","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchContacts } from \"redux/contacts/contacts-operations\";\nimport { getError, getFilteredContacts, getIsLoading } from 'redux/contacts/contacts-selectors';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport ErrorNotify from 'components/ErrorNotify/ErrorNotify';\nimport { Box, SimpleGrid, Avatar, Flex, Progress, IconButton } from '@chakra-ui/react';\nimport { PhoneIcon, DeleteIcon, EditIcon } from '@chakra-ui/icons';\n\nexport default function ContactsList() {\n    const contacts = useSelector(getFilteredContacts)\n    const loading = useSelector(getIsLoading)\n    const error = useSelector(getError)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n\n    const removeContact = (id) => {\n        const action = deleteContact(id);\n        dispatch(action);\n    }\n\n    return (\n        <>\n            {loading && <Progress w={700} ml='auto' mr='auto' size='xs' isIndeterminate />}\n            {!loading && error && <ErrorNotify />}\n            <SimpleGrid columns={[1, 1, 1, 2]} spacing={6} pt={6} pb={6}>\n                {!error && contacts?.map(({ name, number, id }) => {\n                    return (\n                        <Flex justify='space-between' border='1px solid gray' borderRadius='4px' pt='2' pb='2' pl='4' pr='4' fontSize='xl' key={id}>\n                            <Box>\n                                <Flex align='center'>\n                                    <Avatar size='xs' mr='2' />\n                                    {name}\n                                </Flex>\n                                <Flex align='center' mt={1}>\n                                    <PhoneIcon w={6} h={6} color='gray.600' mr='2' />\n                                    {number}\n                                </Flex>\n                            </Box>\n                            <Flex alignItems='center'>\n                                <IconButton aria-label='Change button' icon={<EditIcon w={5} h={5} />} onClick={null}></IconButton>\n                                <IconButton aria-label='Delete button' icon={<DeleteIcon w={5} h={5} />} onClick={() => removeContact(id)}></IconButton>\n                            </Flex>\n                        </Flex>\n                    )\n                })}\n            </SimpleGrid>\n        </>\n    )\n}\n\n\n// <Flex align='center' border='1px solid gray' borderRadius='4px' pt='2' pb='2' pl='4' pr='4' fontSize='xl' key={id}>\n//     <Avatar size='xs' mr='2' /> {name} <PhoneIcon size='xm' mr='2' /> {number} <button onClick={() => removeContact(id)}>delete</button>\n// </Flex>","export const getFilter = store => store.filter;","import React from 'react'\n// import { nanoid } from 'nanoid'\n// import { Box, Input, Label } from './ContactsFilter.styled'\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { Flex, Heading, Input } from '@chakra-ui/react';\n\nexport default function ContactsFilter() {\n    // const filterInpuId = nanoid();\n\n    const filter = useSelector(getFilter)\n    const dispatch = useDispatch()\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget\n        if (name === 'filter') {\n            dispatch(setFilter(value))\n        }\n    };\n    return (\n        <Flex justify='center' align='center' flexDirection='column' pt={4} pb={4}>\n            <Heading as='h2' textAlign='center'>Write first latter of name to quick search</Heading>\n            <Input w={500} mt='4' borderColor='gray.400' type=\"text\" name='filter' value={filter} placeholder='Enter some name ...' onChange={handleChange} />\n        </Flex >\n    )\n}\n","import React from 'react'\nimport ContactsForm from '../components/ContactsForm/ContactsForm';\nimport ContactsList from '../components/ContactsList/ContactsList';\nimport ContactsFilter from '../components/ContactsFilter/ContactsFilter';\nimport { Box } from '@chakra-ui/react';\nimport { useSelector } from 'react-redux';\nimport { getItems } from 'redux/contacts/contacts-selectors';\n\nexport default function Contacts() {\n    const contacts = useSelector(getItems)\n\n    return (\n        <>\n            <Box p={4}>\n                <ContactsForm />\n            </Box>\n            <Box>\n                {contacts.length > 0 && <ContactsFilter />}\n                <ContactsList />\n            </Box>\n        </>\n    )\n}\n"],"names":["getIsLoading","state","contacts","isLoading","getItems","items","getError","error","getFilteredContacts","filter","contactss","name","number","toLocaleLowerCase","includes","ContactsForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","currentTarget","value","contactNameInpuId","nanoid","contactNumberInputId","onAddContact","contact","onDuplicatingName","alert","addContact","find","as","isRequired","autoComplete","style","border","padding","borderRadius","onSubmit","preventDefault","htmlFor","type","id","onChange","borderColor","placeholder","colorScheme","ml","mt","ErrorNotify","display","width","margin","textAlign","paddingTop","fontSize","spin","keyframes","strokeDasharray","strokeDashoffset","rotate","transform","progress","left","stripe","from","backgroundPosition","to","getProgressProps","options","min","max","valueText","getValueText","isIndeterminate","role","percent","valueToPercent","bind","getAriaValueText","Shape","props","size","rest","React","chakra","viewBox","__css","height","animation","displayName","Circle","chakra2","cx","cy","r","fill","forwardRef","ref","capIsRound","children","thickness","color","trackColor","progress2","determinant","indicatorProps","css","transitionProperty","transitionDuration","transitionTimingFunction","rootStyles","position","verticalAlign","chakra3","className","stroke","strokeWidth","strokeLinecap","opacity","createContext","errorMessage","ProgressStylesProvider","useProgressStyles","ProgressFilledTrack","forwardRef2","styles","trackStyles","filledTrack","chakra4","Progress","_a","omitThemingProps","hasStripe","isAnimated","propBorderRadius","ariaLabel","ariaLabelledBy","title","useMultiStyleConfig","track","stripeAnimation","shouldAnimateStripe","willChange","minWidth","overflow","chakra6","baseStyle","top","ContactsList","loading","useEffect","fetchContacts","w","mr","columns","spacing","pt","pb","map","justify","pl","pr","align","h","alignItems","icon","onClick","action","deleteContact","removeContact","getFilter","store","ContactsFilter","flexDirection","setFilter","Contacts","p","length"],"sourceRoot":""}