{"version":3,"file":"static/js/885.b7866884.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactsForm/ContactsForm.jsx","components/ErrorNotify/ErrorNotify.jsx","components/ChangeContactInfoForm/ChangeContactInfoForm.jsx","components/ContactsList/ContactsList.jsx","redux/filter/filter-selectors.js","components/ContactsFilter/ContactsFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getIsLoading = state => state.contacts.isLoading\n\nexport const getItems = state => state.contacts.items\n\nexport const getError = state => state.contacts.error\n\nexport const getFirstLoadingState = state => state.contacts.firstLoading\n\nexport const getFilteredContacts = ({ contacts, filter }) => {   \n  const contactss = contacts.items\n  const filterr = filter\n    if (!filterr) {\n      return contactss\n    }\n\n  const filteredContacts = contactss.filter(({ name, number }) => {\n      const result = name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()) || number.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n      return result\n    })\n\n    return filteredContacts\n}","import React, { useState } from 'react'\nimport { nanoid } from 'nanoid'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { FormLabel, FormControl, Input, Button } from '@chakra-ui/react';\nimport { toast } from 'react-toastify'\n\nexport default function ContactsForm() {\n    const contacts = useSelector(getFilteredContacts)\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n\n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget\n        if (name === 'name') {\n            return setName(value)\n        }\n        if (name === 'number') {\n            return setNumber(value)\n        }\n    };\n\n    const contactNameInpuId = nanoid();\n    const contactNumberInputId = nanoid();\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        onAddContact({ name, number })\n    }\n\n    const onAddContact = (contact) => {\n        if (onDuplicatingName(contact)) {\n            return toast('This contact is already on your list.', {\n                position: \"top-right\",\n                type: 'warning',\n                autoClose: 2500,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"light\",\n            })\n        }\n\n        dispatch(addContact(contact))\n        setName('')\n        setNumber('')\n\n    }\n\n    const onDuplicatingName = ({ name }) => {\n        const result = contacts.find(contact => {\n            return contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n        })\n        return result\n    }\n\n    return (\n        <FormControl as='form' isRequired autoComplete='off' style={{ border: '1px solid #A0AEC0', padding: '10px 20px', borderRadius: '10px' }} onSubmit={handleSubmit}>\n            <FormLabel htmlFor={contactNameInpuId}>Name</FormLabel>\n            <Input type='text' name='name' value={name} id={contactNameInpuId} onChange={handleChange} borderColor='gray.400' placeholder='Ivan Ivanov' />\n            <FormLabel htmlFor={contactNumberInputId}>Number</FormLabel>\n            <Input type='number' name='number' value={number} id={contactNumberInputId} onChange={handleChange} borderColor='gray.400' placeholder='+38 (012) 345 67 89' />\n            <Button colorScheme='blackAlpha' ml='6' mt='4' type='submit'>Add Contact</Button>\n        </FormControl>\n    )\n}\n\n","import React from 'react'\nimport { useSelector } from \"react-redux\";\nimport { getError } from 'redux/contacts/contacts-selectors';\n\nexport default function ErrorNotify() {\n    const error = useSelector(getError)\n\n    return (\n        <>\n            <div style={{ display: 'block', width: '450px', margin: '0 auto', textAlign: 'center', paddingTop: '100px', fontSize: '28px' }}>\n                Oops, something went wrong :( {error}\n            </div>\n        </>\n    )\n}\n","import { Button, FormControl, Input, FormLabel, Flex } from '@chakra-ui/react'\nimport React from 'react'\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { changeContact } from 'redux/contacts/contacts-operations'\nimport { nanoid } from 'nanoid'\nimport { toast } from 'react-toastify';\n\nexport default function ChangeContactInfoForm({ data, onClose }) {\n    const [name, setName] = useState(data.name)\n    const [number, setNumber] = useState(data.number)\n    const dispatch = useDispatch()\n\n    const nameInpuId = nanoid();\n    const numberInputId = nanoid();\n\n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget\n        if (name === 'name') {\n            return setName(value)\n        }\n        if (name === 'number') {\n            return setNumber(value)\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (data.name === name && data.number === number) {\n            toast('You need change name or number', {\n                position: \"top-right\",\n                type: 'info',\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"light\",\n            })\n            return\n        }\n        dispatch(changeContact({ id: data.id, name, number }))\n        onClose()\n    }\n\n    return (\n        <>\n            <FormControl as='form' onSubmit={handleSubmit} pb={4} pr={6} pl={6}>\n                <FormLabel htmlFor={nameInpuId}>Name</FormLabel>\n                <Input id={nameInpuId} type=\"text\" name='name' value={name} onChange={handleChange} />\n\n                <FormLabel htmlFor={numberInputId} pt={4}>Number</FormLabel>\n                <Input id={numberInputId} type=\"text\" name='number' value={number} onChange={handleChange} />\n\n                <Flex justify='flex-end' pt={3}>\n                    <Button colorScheme='blue' type='submit' mr={4}>Save</Button>\n                    <Button onClick={onClose}>Close</Button>\n                </Flex>\n            </FormControl>\n        </>\n    )\n}\n","import ErrorNotify from 'components/ErrorNotify/ErrorNotify';\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getError, getFilteredContacts, getFirstLoadingState, getIsLoading } from 'redux/contacts/contacts-selectors';\nimport { deleteContact, fetchContacts } from 'redux/contacts/contacts-operations';\nimport { Box, SimpleGrid, Avatar, Flex, Progress, IconButton } from '@chakra-ui/react';\nimport { PhoneIcon, DeleteIcon, EditIcon } from '@chakra-ui/icons';\n\nimport {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n} from '@chakra-ui/react'\nimport { useDisclosure } from '@chakra-ui/react'\nimport { useState } from 'react';\nimport ChangeContactInfoForm from 'components/ChangeContactInfoForm/ChangeContactInfoForm';\n\n\nexport default function ContactsList() {\n    const contacts = useSelector(getFilteredContacts)\n    const firstLoading = useSelector(getFirstLoadingState)\n    const loading = useSelector(getIsLoading)\n    const error = useSelector(getError)\n    const dispatch = useDispatch()\n\n    const { onOpen, isOpen, onClose } = useDisclosure()\n    const [contactData, setContactData] = useState(null)\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch])\n\n    const removeContact = (id) => {\n        const action = deleteContact(id);\n        dispatch(action);\n    }\n\n    const handleChangeBtnClick = (contact) => {\n        setContactData({ ...contact })\n        return onOpen()\n    }\n\n    const handleCloseForm = () => {\n        onClose()\n    }\n\n    return (\n        <>\n            {firstLoading && <Progress w={700} ml='auto' mr='auto' size='xs' isIndeterminate />}\n            {!firstLoading && error && <ErrorNotify />}\n            <SimpleGrid columns={[1, 1, 1, 2]} spacing={6} pt={6} pb={6}>\n                {!error && contacts?.map(({ name, number, id }) => {\n                    return (\n                        <Flex justify='space-between' border='1px solid gray' borderRadius='4px' pt='2' pb='2' pl='4' pr='4' fontSize='xl' key={id}>\n                            <Box>\n                                <Flex align='center'>\n                                    <Avatar size='xs' mr='2' />\n                                    {name}\n                                </Flex>\n                                <Flex align='center' mt={1}>\n                                    <PhoneIcon w={6} h={6} color='gray.600' mr='2' />\n                                    {number}\n                                </Flex>\n                            </Box>\n                            <Flex alignItems='center'>\n                                <IconButton aria-label='Change button' isLoading={loading} icon={<EditIcon w={5} h={5} />} onClick={() => handleChangeBtnClick({ name, number, id })}></IconButton>\n                                <IconButton aria-label='Delete button' isLoading={loading} icon={<DeleteIcon w={5} h={5} />} onClick={() => removeContact(id)}></IconButton>\n                                {/* <IconButton aria-label='Delete button' id={id} icon={<DeleteIcon w={5} h={5} />} onClick={(e) => removeContact(e, id)}></IconButton> */}\n                            </Flex>\n                        </Flex>\n\n                    )\n                })}\n            </SimpleGrid>\n            <Modal isOpen={isOpen}>\n                <ModalOverlay />\n                <ModalContent>\n                    <ModalHeader>Change Contact</ModalHeader>\n                    <ChangeContactInfoForm data={contactData} onClose={handleCloseForm} />\n                </ModalContent>\n            </Modal>\n        </>\n    )\n}\n","export const getFilter = store => store.filter;","import React from 'react'\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { Flex, Heading, Input } from '@chakra-ui/react';\n\nexport default function ContactsFilter() {\n    const filter = useSelector(getFilter)\n    const dispatch = useDispatch()\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget\n        if (name === 'filter') {\n            dispatch(setFilter(value))\n        }\n    };\n    return (\n        <Flex justify='center' align='center' flexDirection='column' pt={4} pb={4}>\n            <Heading as='h2' textAlign='center'>Write first latter of name to quick search</Heading>\n            <Input w={500} mt='4' borderColor='gray.400' type=\"text\" name='filter' value={filter} placeholder='Enter some name ...' onChange={handleChange} />\n        </Flex >\n    )\n}","import React from 'react'\nimport ContactsForm from '../components/ContactsForm/ContactsForm';\nimport ContactsList from '../components/ContactsList/ContactsList';\nimport ContactsFilter from '../components/ContactsFilter/ContactsFilter';\nimport { Box } from '@chakra-ui/react';\nimport { useSelector } from 'react-redux';\nimport { getItems } from 'redux/contacts/contacts-selectors';\n\nexport default function Contacts() {\n    const contacts = useSelector(getItems)\n\n    return (\n        <>\n            <Box p={4}>\n                <ContactsForm />\n            </Box>\n            <Box>\n                {contacts.length > 0 && <ContactsFilter />}\n                <ContactsList />\n            </Box>\n        </>\n    )\n}\n"],"names":["getIsLoading","state","contacts","isLoading","getItems","items","getError","error","getFirstLoadingState","firstLoading","getFilteredContacts","filter","contactss","name","number","toLocaleLowerCase","includes","ContactsForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","currentTarget","value","contactNameInpuId","nanoid","contactNumberInputId","onAddContact","contact","onDuplicatingName","toast","position","type","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","addContact","find","as","isRequired","autoComplete","style","border","padding","borderRadius","onSubmit","preventDefault","htmlFor","id","onChange","borderColor","placeholder","colorScheme","ml","mt","ErrorNotify","display","width","margin","textAlign","paddingTop","fontSize","ChangeContactInfoForm","data","onClose","nameInpuId","numberInputId","changeContact","pb","pr","pl","pt","justify","mr","onClick","ContactsList","loading","useDisclosure","onOpen","isOpen","contactData","setContactData","useEffect","fetchContacts","w","size","isIndeterminate","columns","spacing","map","align","h","color","alignItems","icon","action","deleteContact","removeContact","getFilter","store","ContactsFilter","flexDirection","setFilter","Contacts","p","length"],"sourceRoot":""}